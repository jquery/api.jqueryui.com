<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="dialog" namespace="fn" type="Widget" widgetnamespace="ui">
	<desc>Open content in an interactive overlay</desc>
	<longdesc>
		<p>A dialog is a floating window that contains a title bar and a content area. The dialog window can be moved, resized and closed with the 'x' icon by default.</p>

		<p>If the content length exceeds the maximum height, a scrollbar will automatically appear.</p>

		<p>A bottom button bar and semi-transparent modal overlay layer are common options that can be added.</p>

		<p>This widget requires some functional CSS, otherwise it won't work. If you build a custom theme, use the widget's specific CSS file as a starting point.</p>
	</longdesc>
	<created>1.0</created>
	<options>
		<option name="autoOpen" default='true'>
			<desc>When ''autoOpen'' is ''true'' the dialog will open automatically when ''dialog'' is called. If ''false'' it will stay hidden until ''.dialog("open")'' is called on it.</desc>
			<type name="Boolean" />
		</option>
		<option name="buttons" default='{ }'>
			<desc>Specifies which buttons should be displayed on the dialog. The property key is the text of the button. The value is the callback function for when the button is clicked.  The context of the callback is the dialog element; if you need access to the button, it is available as the target of the event object.</desc>
			<type name="Object" />
		</option>
		<option name="buttons" default='[ ]'>
			<desc>Specifies which buttons should be displayed on the dialog. Each element of the array must be an Object defining the properties to set on the button.</desc>
			<type name="Array" />
		</option>
		<option name="closeOnEscape" default='true'>
			<desc>Specifies whether the dialog should close when it has focus and the user presses the esacpe (ESC) key.</desc>
			<type name="Boolean" />
		</option>
		<option name="closeText" default='"close"'>
			<desc>Specifies the text for the close button. Note that the close text is visibly hidden when using a standard theme.</desc>
			<type name="String" />
		</option>
		<option name="dialogClass" default='""'>
			<desc>The specified class name(s) will be added to the dialog, for additional theming.</desc>
			<type name="String" />
		</option>
		<option name="disabled" default="false">
			<desc>Disables the dialog if set to true.</desc>
			<type name="Boolean" />
		</option>
		<option name="draggable" default='true'>
			<desc>If set to true, the dialog will be draggable by the titlebar.</desc>
			<type name="Boolean" />
		</option>
		<option name="height" default='"auto"'>
			<desc>The height of the dialog, in pixels. Specifying 'auto' is also supported to make the dialog adjust based on its content.</desc>
			<type name="Number" />
		</option>
		<option name="hide" default='null'>
			<desc>The effect to be used when the dialog is closed.</desc>
			<type name="String" />
		</option>
		<option name="hide" default='null'>
			<desc>The effect to be used when the dialog is closed.</desc>
			<type name="Object" />
		</option>
		<option name="maxHeight" default='false'>
			<desc>The maximum height to which the dialog can be resized, in pixels.</desc>
			<type name="Number" />
		</option>
		<option name="maxWidth" default='false'>
			<desc>The maximum width to which the dialog can be resized, in pixels.</desc>
			<type name="Number" />
		</option>
		<option name="minHeight" default='150'>
			<desc>The minimum height to which the dialog can be resized, in pixels.</desc>
			<type name="Number" />
		</option>
		<option name="minWidth" default='150'>
			<desc>The minimum width to which the dialog can be resized, in pixels.</desc>
			<type name="Number" />
		</option>
		<option name="modal" default='false'>
			<desc>If set to true, the dialog will have modal behavior; other items on the page will be disabled (i.e. cannot be interacted with). Modal dialogs create an overlay below the dialog but above other page elements.</desc>
			<type name="Boolean" />
		</option>
		<option name="position" default='"center"'>
			<desc>Specifies where the dialog should be displayed. Possible values: <br/>1) a single string representing position within viewport: 'center', 'left', 'right', 'top', 'bottom'. <br/>2) an array containing an <em>x,y</em> coordinate pair in pixel offset from left, top corner of viewport (e.g. [350,100]) <br/>3) an array containing <em>x,y</em> position string values (e.g. ['right','top'] for top right corner).</desc>
			<type name="String" />
			<type name="Array" />
		</option>
		<option name="resizable" default='true'>
			<desc>If set to true, the dialog will be resizable.</desc>
			<type name="Boolean" />
		</option>
		<option name="show" default='null'>
			<desc>The effect to be used when the dialog is opened.</desc>
			<type name="String" />
		</option>
		<option name="show" default='null'>
			<desc>The effect to be used when the dialog is opened.</desc>
			<type name="Object" />
		</option>
		<option name="stack" default='true'>
			<desc>Specifies whether the dialog will stack on top of other dialogs. This will cause the dialog to move to the front of other dialogs when it gains focus.</desc>
			<type name="Boolean" />
		</option>
		<option name="title" default='""'>
			<desc>Specifies the title of the dialog. Any valid HTML may be set as the title. The title can also be specified by the title attribute on the dialog source element.</desc>
			<type name="String" />
		</option>
		<option name="width" default='300'>
			<desc>The width of the dialog, in pixels.</desc>
			<type name="Number" />
		</option>
		<option name="zIndex" default='1000'>
			<desc>The starting z-index for the dialog.</desc>
			<type name="Number" />
		</option>

	</options>
	<events>
		<event name="beforeClose" type="dialogbeforeclose">
			<desc>This event is triggered when a dialog attempts to close. If the beforeClose event handler (callback function) returns false, the close will be prevented.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="create">
			<desc>
				This event is triggered when the dialog is created.
			</desc>
			<argument name="event" type="Event">
			</argument>
			<argument name="ui" type="Object">
			</argument>
		</event>
		<event name="open" type="dialogopen">
			<desc>This event is triggered when dialog is opened.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="focus" type="dialogfocus">
			<desc>This event is triggered when the dialog gains focus.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="dragStart" type="dialogdragstart">
			<desc>This event is triggered at the beginning of the dialog being dragged.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
				<property name="position" type="Object">
					<desc>The current position of the dialog relative to the offset</desc>
				</property>
				<property name="offset" type="Object">
					<desc>The current absolute position of the dialog, relative to the page</desc>
				</property>
			</argument>
		</event>
		<event name="drag" type="dialogdrag">
			<desc>This event is triggered when the dialog is dragged.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
				<property name="position" type="Object">
					<desc>The current position of the dialog relative to the offset</desc>
				</property>
				<property name="offset" type="Object">
					<desc>The current absolute position of the dialog, relative to the page</desc>
				</property>
			</argument>
		</event>
		<event name="dragStop" type="dialogdragstop">
			<desc>This event is triggered after the dialog has been dragged.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
				<property name="position" type="Object">
					<desc>The current position of the dialog relative to the offset</desc>
				</property>
				<property name="offset" type="Object">
					<desc>The current absolute position of the dialog, relative to the page</desc>
				</property>
			</argument>
		</event>
		<event name="resizeStart" type="dialogresizestart">
			<desc>This event is triggered at the beginning of the dialog being resized.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
				<property name="position" type="Object">
					<desc>The current position of the dialog relative to the offset</desc>
				</property>
				<property name="offset" type="Object">
					<desc>The current absolute position of the dialog, relative to the page</desc>
				</property>
			</argument>
		</event>
		<event name="resize" type="dialogresize">
			<desc>This event is triggered when the dialog is resized.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
				<property name="position" type="Object">
					<desc>The current position of the dialog relative to the offset</desc>
				</property>
				<property name="offset" type="Object">
					<desc>The current absolute position of the dialog, relative to the page</desc>
				</property>
			</argument>
		</event>
		<event name="resizeStop" type="dialogresizestop">
			<desc>This event is triggered after the dialog has been resized.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
				<property name="position" type="Object">
					<desc>The current position of the dialog relative to the offset</desc>
				</property>
				<property name="offset" type="Object">
					<desc>The current absolute position of the dialog, relative to the page</desc>
				</property>
			</argument>
		</event>
		<event name="close" type="dialogclose">
			<desc>This event is triggered when the dialog is closed.</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>

	</events>
	<methods>
		<method name="close">
			<desc>Close the dialog.</desc>
		</method>
		<method name="destroy">
			<desc>
				Remove the dialog functionality completely. This will return the element back to its pre-init state.
			</desc>
		</method>
		<method name="disable">
			<desc>
				Disable the dialog.
			</desc>
		</method>
		<method name="enable">
			<desc>
				Enable the dialog.
			</desc>
		</method>
		<method name="isOpen">
			<desc>Returns true if the dialog is currently open.</desc>
		</method>
		<method name="moveToTop">
			<desc>Move the dialog to the top of the dialogs stack.</desc>
		</method>
		<method name="open">
			<desc>Open the dialog.</desc>
		</method>
		<method name="option">
			<desc>
				Get or set any dialog option. If no value is specified, will act as a getter.
			</desc>
			<argument name="optionName" type="String">
			</argument>
			<argument name="value" type="Object" optional="true">
			</argument>
		</method>
		<method name="option">
			<desc>
				Set multiple dialog options at once by providing an options object.
			</desc>
			<argument name="options" type="Object">
			</argument>
		</method>
		<method name="widget">
			<desc>
				Returns the widget
			</desc>
		</method>
	</methods>
	<example>

		<desc>A simple jQuery UI Dialog.</desc>
		<code><![CDATA[$("#dialog").dialog();]]></code>
		<html><![CDATA[
<div id="dialog" title="Dialog Title">I'm in a dialog</div>

]]></html>

	</example>
	<category slug="widgets"/>
</entry>
