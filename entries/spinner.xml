<?xml version="1.0"?>
<entry name="spinner" type="widget" widget-element="generated wrapper" event-prefix="spin">
	<title>Spinner Widget</title>
	<desc>
		Enhance a text input for entering numeric values, with up/down buttons and arrow key handling.
	</desc>
	<longdesc>
		<p>The Spinner, or number stepper widget, is perfect for handling all kinds of numeric input. It allows users to type a value directly, or modify an existing value by spinning with the keyboard, mouse or scrollwheel. When combined with Globalize, you can even spin currencies and dates in a variety of locales.</p>

		<p>Spinner wraps a text input with two buttons to increment and decrement the current value. Key events are added so that the same incrementing and decrementing can be done with the keyboard. Spinner delegates to <a href="https://github.com/jquery/globalize">Globalize</a> for number formatting and parsing.</p>

		<h3>Keyboard interaction</h3>

		<ul>
			<li><code>UP</code>: Increment the value by one step.</li>
			<li><code>DOWN</code>: Decrement the value by one step.</li>
			<li><code>PAGE UP</code>: Increment the value by one page.</li>
			<li><code>PAGE DOWN</code>: Decrement the value by one page.</li>
		</ul>

		<p>Focus stays in the text field, even after using the mouse to click one of the spin buttons.</p>

		<p>When the spinner is not read only (<code>&lt;input readonly&gt;</code>), the user may enter text that causes an invalid value (below min, above max, step mismatch, non-numeric input). Whenever a step is taken, either programmatically or via the step buttons, the value will be forced to a valid value (see the description for <a href="#method-stepUp"><code>stepUp()</code></a> and <a href="#method-stepDown"><code>stepDown()</code></a> for more details).</p>

		<xi:include href="../includes/widget-theming.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>

		<ul>
			<li>
				<code>ui-spinner</code>: The outer container of the spinner.
				<ul>
					<li><code>ui-spinner-input</code>: The <code>&lt;input&gt;</code> element that the Spinner widget was instantiated with.</li>
					<li><code>ui-spinner-button</code>: The button controls used to increment and decrement the spinner's value. The up button will additionally have a <code>ui-spinner-up</code> class and the down button will additionally have a <code>ui-spinner-down</code> class.</li>
				</ul>
			</li>
		</ul>

		<h3>Dependencies</h3>
		<ul>
			<li><a href="/category/ui-core/">UI Core</a></li>
			<li><a href="/jQuery.widget/">Widget Factory</a></li>
			<li><a href="/button/">Button</a></li>
			<li><a href="https://github.com/jquery/globalize">Globalize</a> (external, optional; for use with the <a href="#option-culture"><code>culture</code></a> and <a href="#option-numberFormat"><code>numberFormat</code></a> options)</li>
		</ul>
	</longdesc>
	<note id="functional-css"/>
	<note id="native-change-warning"/>
	<note>
		Creating a spinner on an <code>&lt;input type="number"&gt;</code> is not supported due to a UI conflict with the native spinner.
	</note>
	<added>1.9</added>
	<options>
		<option name="classes" type="Object">
			<default>{
	"ui-spinner": "ui-corner-all",
	"ui-spinner-down": "ui-corner-br",
	"ui-spinner-up": "ui-corner-tr"
}</default>
			<xi:include href="../includes/classes-option-desc.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
			<xi:include href="../includes/classes-option-example.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		</option>
		<option name="culture" type="String" default="null" example-value='"fr"'>
			<desc>Sets the culture to use for parsing and formatting the value. If <code>null</code>, the currently set culture in <code>Globalize</code> is used, see <a href="https://github.com/jquery/globalize">Globalize docs</a> for available cultures. Only relevant if the <a href="#option-numberFormat"><code>numberFormat</code></a> option is set. Requires <a href="https://github.com/jquery/globalize">Globalize</a> to be included.</desc>
		</option>
		<xi:include href="../includes/widget-option-disabled.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<option name="icons" type="Object" default='{ down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" }' example-value='{ down: "custom-down-icon", up: "custom-up-icon" }'>
			<desc>
				Icons to use for buttons, matching <a href="/theming/icons/">an icon provided by the jQuery UI CSS Framework</a>.
				<ul>
					<li>up (string, default: "ui-icon-triangle-1-n")</li>
					<li>down (string, default: "ui-icon-triangle-1-s")</li>
				</ul>
			</desc>
		</option>
		<option name="incremental" default="true" example-value="false">
			<desc>Controls the number of steps taken when holding down a spin button.</desc>
			<type name="Boolean">
				<desc>When set to <code>true</code>, the stepping delta will increase when spun incessantly. When set to <code>false</code>, all steps are equal (as defined by the <a href="#option-step"><code>step</code></a> option).</desc>
			</type>
			<type name="Function">
				<argument name="count" type="Integer"/>
				<desc>Receives one parameter: the number of spins that have occurred. Must return the number of steps that should occur for the current spin.</desc>
			</type>
		</option>
		<option name="max" default="null" example-value="50">
			<desc>The maximum allowed value. The element's <code>max</code> attribute is used if it exists and the option is not explicitly set. If <code>null</code>, there is no maximum enforced.</desc>
			<type name="Number">
				<desc>The maximum value.</desc>
			</type>
			<type name="String">
				<desc>If <a href="https://github.com/jquery/globalize">Globalize</a> is included, the <code>max</code> option can be passed as a string which will be parsed based on the <a href="#opiton-numberFormat"><code>numberFormat</code></a> and <a href="#option-culture"><code>culture</code></a> options; otherwise it will fall back to the native <code>parseFloat()</code> method.</desc>
			</type>
		</option>
		<option name="min" default="null" example-value="0">
			<desc>The minimum allowed value. The element's <code>min</code> attribute is used if it exists and the option is not explicitly set. If <code>null</code>, there is no minimum enforced.</desc>
			<type name="Number">
				<desc>The minimum value.</desc>
			</type>
			<type name="String">
				<desc>If <a href="https://github.com/jquery/globalize">Globalize</a> is included, the <code>min</code> option can be passed as a string which will be parsed based on the <a href="#opiton-numberFormat"><code>numberFormat</code></a> and <a href="#option-culture"><code>culture</code></a> options; otherwise it will fall back to the native <code>parseFloat()</code> method.</desc>
			</type>
		</option>
		<option name="numberFormat" type="String" default="null" example-value='"n"'>
			<desc>Format of numbers passed to  <a href="https://github.com/jquery/globalize"><code>Globalize</code></a>, if available. Most common are <code>"n"</code> for a decimal number and <code>"C"</code> for a currency value. Also see the <a href="#option-culture"><code>culture</code></a> option.</desc>
		</option>
		<option name="page" type="Number" default="10" example-value="5">
			<desc>The number of steps to take when paging via the <a href="#method-pageUp"><code>pageUp</code></a>/<a href="#method-pageDown"><code>pageDown</code></a> methods.</desc>
		</option>
		<option name="step" default="1" example-value="2">
			<desc>The size of the step to take when spinning via buttons or via the <a href="#method-stepUp"><code>stepUp()</code></a>/<a href="#method-stepDown"><code>stepDown()</code></a> methods. The element's <code>step</code> attribute is used if it exists and the option is not explicitly set.</desc>
			<type name="Number">
				<desc>The size of the step.</desc>
			</type>
			<type name="String">
				<desc>If <a href="https://github.com/jquery/globalize">Globalize</a> is included, the <code>step</code> option can be passed as a string which will be parsed based on the <a href="#opiton-numberFormat"><code>numberFormat</code></a> and <a href="#option-culture"><code>culture</code></a> options, otherwise it will fall back to the native <code>parseFloat</code>.</desc>
			</type>
		</option>
	</options>
	<methods>
		<xi:include href="../includes/widget-method-destroy.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-disable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-enable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-instance.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-option.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<method name="pageDown">
			<desc>
				<p>Decrements the value by the specified number of pages, as defined by the <a href="#option-page"><code>page</code></a> option. Without the parameter, a single page is decremented.</p>
				<p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p>
				<p>Invoking <code>pageDown()</code> will cause <a href="#event-start"><code>start</code></a>, <a href="#event-spin"><code>spin</code></a>, and <a href="#event-stop"><code>stop</code></a> events to be triggered.</p>
			</desc>
			<argument name="pages" type="Number" optional="true">
				<desc>Number of pages to decrement, defaults to 1.</desc>
			</argument>
		</method>
		<method name="pageUp" example-params='10'>
			<desc>
				<p>Increments the value by the specified number of pages, as defined by the <a href="#option-page"><code>page</code></a> option. Without the parameter, a single page is incremented.</p>
				<p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p>
				<p>Invoking <code>pageUp()</code> will cause <a href="#event-start"><code>start</code></a>, <a href="#event-spin"><code>spin</code></a>, and <a href="#event-stop"><code>stop</code></a> events to be triggered.</p>
			</desc>
			<argument name="pages" type="Number" optional="true">
				<desc>Number of pages to increment, defaults to 1.</desc>
			</argument>
		</method>
		<method name="stepDown">
			<desc>
				<p>Decrements the value by the specified number of steps. Without the parameter, a single step is decremented.</p>
				<p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p>
				<p>Invoking <code>stepDown()</code> will cause <a href="#event-start"><code>start</code></a>, <a href="#event-spin"><code>spin</code></a>, and <a href="#event-stop"><code>stop</code></a> events to be triggered.</p>
			</desc>
			<argument name="steps" type="Number" optional="true">
				<desc>Number of steps to decrement, defaults to 1.</desc>
			</argument>
		</method>
		<method name="stepUp" example-params='5'>
			<desc>
				<p>Increments the value by the specified number of steps. Without the parameter, a single step is incremented.</p>
				<p>If the resulting value is above the max, below the min, or results in a step mismatch, the value will be adjusted to the closest valid value.</p>
				<p>Invoking <code>stepUp()</code> will cause <a href="#event-start"><code>start</code></a>, <a href="#event-spin"><code>spin</code></a>, and <a href="#event-stop"><code>stop</code></a> events to be triggered.</p>
			</desc>
			<argument name="steps" type="Number" optional="true">
				<desc>Number of steps to increment, defaults to 1.</desc>
			</argument>
		</method>
		<method name="value">
			<desc>
				Gets or sets the current value as a number.
			</desc>
			<signature return="Number" example-return-var="value">
				<desc>Gets the current value as a number. The value is parsed based on the <a href="#option-numberFormat"><code>numberFormat</code></a> and <a href="#option-culture"><code>culture</code></a> options.</desc>
			</signature>
			<signature example-params='50'>
				<argument name="value">
					<desc>The value to set. If passed as a string, the value is parsed based on the <a href="#option-numberFormat"><code>numberFormat</code></a> and <a href="#option-culture"><code>culture</code></a> options.</desc>
					<type name="Number"/>
					<type name="String"/>
				</argument>
			</signature>
		</method>
		<method name="isValid" return="Boolean" example-return-var="isValid">
			<desc>
				Returns whether the Spinner's value is valid given its <a href="#option-min"><code>min</code></a>, <a href="#option-max"><code>max</code></a>, and <a href="#option-step"><code>step</code></a>.
			</desc>
		</method>
		<xi:include href="../includes/widget-method-widget.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</methods>
	<extension-points>
		<method name="_buttonHtml" return="String">
			<desc>
				Method that returns HTML to use for the spinner's increment and decrement buttons. Each button must be given a <code>ui-spinner-button</code> class name for the associated events to work.
			</desc>
			<example>
				<desc>Use <code>&lt;button&gt;</code> elements for the increment and decrement buttons.</desc>
				<code><![CDATA[
_buttonHtml: function() {
	return "" +
		"<button class='ui-spinner-button ui-spinner-up'>" +
			"<span class='ui-icon " + this.options.icons.up + "'>&#9650;</span>" +
		"</button>" +
		"<button class='ui-spinner-button ui-spinner-down'>" +
			"<span class='ui-icon " + this.options.icons.down + "'>&#9660;</span>" +
		"</button>";
}
]]></code>
			</example>
		</method>
		<method name="_uiSpinnerHtml" return="String">
			<desc>
				Method that determines the HTML to use to wrap the spinner's <code>&lt;input&gt;</code> element.
			</desc>
			<example>
				<desc>Wrap the spinner with a <code>&lt;div&gt;</code> with no rounded corners.</desc>
				<code><![CDATA[
_uiSpinnerHtml: function() {
	return "<div class='ui-spinner ui-widget ui-widget-content'></div>";
}
]]></code>
			</example>
		</method>
	</extension-points>
	<events>
		<xi:include href="../includes/widget-event-create.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<event name="start">
			<desc>
				Triggered before a spin. Can be canceled, preventing the spin from occurring.
			</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object"/>
		</event>
		<event name="spin">
			<desc>
				Triggered during increment/decrement (to determine direction of spin compare current value with <code>ui.value</code>).
				<p>Can be canceled, preventing the value from being updated.</p>
			</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="value" type="Number">
					<desc>The new value to be set, unless the event is cancelled.</desc>
				</property>
			</argument>
		</event>
		<event name="stop">
			<desc>Triggered after a spin.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object"/>
		</event>
		<event name="change">
			<desc>
				Triggered when the value of the spinner has changed and the input is no longer focused.
			</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object"/>
		</event>
	</events>
	<example>
		<height>50</height>
		<desc>Plain number spinner</desc>
		<code><![CDATA[
$( "#spinner" ).spinner();
]]></code>
		<html><![CDATA[
<input id="spinner">
]]></html>
	</example>
	<category slug="widgets"/>
</entry>
