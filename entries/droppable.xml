<?xml version="1.0"?>
<entry name="droppable" type="widget" widget-element="droppable element" event-prefix="drop">
	<title>Droppable Widget</title>
	<desc>Create targets for draggable elements.</desc>
	<longdesc>
		<p>The jQuery UI Droppable plugin makes selected elements droppable (meaning they accept being dropped on by <a href="/draggable/">draggables</a>). You can specify which draggables each will accept.</p>

		<xi:include href="../includes/widget-theming.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>

		<ul>
			<li><code>ui-droppable</code>: The droppable element. When a draggable that can be dropped on this dropppable is activated, the <code>ui-droppable-active</code> class is added. When dragging a draggable over this droppable, the <code>ui-droppable-hover</code> class is added.</li>
		</ul>

		<h3>Dependencies</h3>
		<ul>
			<li><a href="/category/ui-core/">UI Core</a></li>
			<li><a href="/jQuery.widget/">Widget Factory</a></li>
			<li><a href="/mouse/">Mouse Interaction</a></li>
		</ul>
	</longdesc>
	<added>1.0</added>
	<options>
		<option name="accept" default='"*"' example-value='".special"'>
			<desc>Controls which draggable elements are accepted by the droppable.</desc>
			<type name="Selector">
				<desc>A selector indicating which draggable elements are accepted.</desc>
			</type>
			<type name="Function">
				<desc>A function that will be called for each draggable on the page (passed as the first argument to the function). The function must return <code>true</code> if the draggable should be accepted.</desc>
			</type>
		</option>
		<option name="activeClass" type="String" default="false" example-value='"ui-state-highlight"'>
			<desc>If specified, the class will be added to the droppable while an acceptable draggable is being dragged.</desc>
		</option>
		<option name="addClasses" type="Boolean" default="true" example-value="false">
			<desc>If set to <code>false</code>, will prevent the <code>ui-droppable</code> class from being added. This may be desired as a performance optimization when calling <code>.droppable()</code> init on hundreds of elements.</desc>
		</option>
		<option name="classes" type="Object" default="{}">
			<xi:include href="../includes/classes-option-desc.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
			<xi:include href="../includes/classes-option-example.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		</option>
		<xi:include href="../includes/widget-option-disabled.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<option name="greedy" type="Boolean" default="false" example-value="true">
			<desc>By default, when an element is dropped on nested droppables, each droppable will receive the element. However, by setting this option to <code>true</code>, any parent droppables will not receive the element. The <code>drop</code> event will still bubble normally, but the <code>event.target</code> can be checked to see which droppable received the draggable element.</desc>
		</option>
		<option name="hoverClass" type="String" default="false" example-value='"drop-hover"'>
			<desc>If specified, the class will be added to the droppable while an acceptable draggable is being hovered over the droppable.</desc>
		</option>
		<option name="scope" type="String" default='"default"' example-value='"tasks"'>
			<desc>Used to group sets of draggable and droppable items, in addition to the <a href="#option-accept"><code>accept</code></a> option. A draggable with the same scope value as a droppable will be accepted.</desc>
		</option>
		<option name="tolerance" type="String" default='"intersect"' example-value='"fit"'>
			<desc>
				Specifies which mode to use for testing whether a draggable is hovering over a droppable. Possible values:
				<ul>
					<li><code>"fit"</code>: Draggable overlaps the droppable entirely.</li>
					<li><code>"intersect"</code>: Draggable overlaps the droppable at least 50% in both directions.</li>
					<li><code>"pointer"</code>: Mouse pointer overlaps the droppable.</li>
					<li><code>"touch"</code>: Draggable overlaps the droppable any amount.</li>
				</ul>
			</desc>
		</option>
	</options>
	<events>
		<xi:include href="../includes/widget-event-create.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<event name="activate">
			<desc>Triggered when an accepted draggable starts dragging. This can be useful if you want to make the droppable "light up" when it can be dropped on.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="draggable" type="jQuery">
				  <desc>A jQuery object representing the draggable element.</desc>
				</property>
				<property name="helper" type="jQuery">
				  <desc>A jQuery object representing the helper that is being dragged.</desc>
				</property>
				<property name="position" type="Object">
				  <desc>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
				<property name="offset" type="Object">
				  <desc>Current offset position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
			</argument>
		</event>
		<event name="deactivate">
			<desc>Triggered when an accepted draggable stops dragging.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="draggable" type="jQuery">
				  <desc>A jQuery object representing the draggable element.</desc>
				</property>
				<property name="helper" type="jQuery">
				  <desc>A jQuery object representing the helper that is being dragged.</desc>
				</property>
				<property name="position" type="Object">
				  <desc>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
				<property name="offset" type="Object">
				  <desc>Current offset position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
			</argument>
		</event>
		<event name="over">
			<desc>Triggered when an accepted draggable is dragged over the droppable (based on the<a href="#option-tolerance"><code>tolerance</code></a> option).</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="draggable" type="jQuery">
				  <desc>A jQuery object representing the draggable element.</desc>
				</property>
				<property name="helper" type="jQuery">
				  <desc>A jQuery object representing the helper that is being dragged.</desc>
				</property>
				<property name="position" type="Object">
				  <desc>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
				<property name="offset" type="Object">
				  <desc>Current offset position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
			</argument>
		</event>
		<event name="out">
			<desc>Triggered when an accepted draggable is dragged out of the droppable (based on the<a href="#option-tolerance"><code>tolerance</code></a> option).</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object"/>
		</event>
		<event name="drop">
			<desc>Triggered when an accepted draggable is dropped on the droppable (based on the<a href="#option-tolerance"><code>tolerance</code></a> option).</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="draggable" type="jQuery">
				  <desc>A jQuery object representing the draggable element.</desc>
				</property>
				<property name="helper" type="jQuery">
				  <desc>A jQuery object representing the helper that is being dragged.</desc>
				</property>
				<property name="position" type="Object">
				  <desc>Current CSS position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
				<property name="offset" type="Object">
				  <desc>Current offset position of the draggable helper as <code>{ top, left }</code> object.</desc>
				</property>
			</argument>
		</event>
	</events>
	<methods>
		<xi:include href="../includes/widget-method-destroy.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-disable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-enable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-instance.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-option.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-widget.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</methods>
	<example>
		<desc>A pair of draggable and droppable elements.</desc>
		<css><![CDATA[
	#draggable {
		width: 100px;
		height: 100px;
		background: #ccc;
	}
	#droppable {
		position: absolute;
		left: 250px;
		top: 0;
		width: 125px;
		height: 125px;
		background: #999;
		color: #fff;
		padding: 10px;
	}
]]></css>
		<code><![CDATA[
$( "#draggable" ).draggable();
$( "#droppable" ).droppable({
	drop: function() {
		alert( "dropped" );
	}
});
]]></code>
		<html><![CDATA[
<div id="droppable">Drop here</div>
<div id="draggable">Drag me</div>
]]></html>
	</example>
	<category slug="interactions"/>
</entry>
